/* Scaling round images */

@mixin round-image {
  &-image {
    height: 0;
    padding-bottom: 100%;
    position: relative;
    overflow: hidden;
    img {
      position: absolute;
      top: 0; left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
}

@mixin underline($color: $white, $size: $spacer*4) {
  position: relative;
  margin-bottom: $spacer;
  &:after {
    content: "";
    display: block;
    position: absolute;
    left: 0;
    bottom: -$spacer;
    width: $size;
    height: $spacer/3;
    background-color: $color;
    transform-origin: left;
    animation-duration: 1s;
    animation-fill-mode: both;
    animation-name: growRight;
  }
}

@mixin sectionSpacing($position: top, $type: padding) {
  @each $var in $position {
    #{$type}-#{$var}: $spacer*3;
  }
}
@mixin titleSpacing($position: top, $type: padding) {
  @each $var in $position {
    #{$type}-#{$var}: $spacer;
  }
}
@mixin transition($property: all, $direction: in) {
  $duration-in: .2s;
  $method-in: ease-in;
  $duration-out: .4s;
  $method-out: ease-in-out;
  $value: ();
  @if $direction == "in" {
    @each $var in $property {
      @if length($value) > 0 {
        $value: append($value, unquote(",") #{$var} $duration-in $method-in);
      }
      @else {
          $value: append($value, #{$var} $duration-in $method-in);
      }
    }
  }
  @else {
    @each $var in $property {
      @if length($value) > 0 {
        $value: append($value, unquote(",") #{$var} $duration-out $method-out);
      }
      @else {
          $value: append($value, #{$var} $duration-out $method-out);
      }
    }
  }
  transition: $value;
}

@mixin boxShadow {
  box-shadow: 0 0 $spacer rgba(0,0,0,.16);
  @include transition(box-shadow, out)
}
